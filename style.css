body {
    margin: 0;
    overflow: hidden;
    background-color: #1a1a1a;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    font-family: Arial, sans-serif;
    color: white;
}

.container {
    perspective: 800px;
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
}

#room {
    /* Dimensions of the room for internal calculations */
    --room-width: 600px;
    --room-height: 400px;
    --room-depth: 600px; /* Let's assume depth matches width for now for easier calculation */

    position: relative;
    transform-style: preserve-3d;

    /* We are offsetting the entire room to place the viewer at the center */
    /* translateZ(-calc(var(--room-depth) / 2)) - Pushes the room back so viewer is inside */
    /* translateY(-calc(var(--room-height) / 2)) - Centers the room vertically. This is a common missing piece. */
    transform:
        translateY(calc(-1 * var(--room-height) / 2)) /* Adjust room's vertical position */
        translateZ(calc(-1 * var(--room-depth) / 2))  /* Pushes the room back */
        rotateX(0deg) rotateY(0deg);
    transition: transform 0.1s linear;
}

.wall {
    position: absolute;
    background: rgba(120, 120, 120, 0.9);
    border: 1px solid #777;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    backface-visibility: hidden;
}

/* Walls are positioned relative to the center of the #room div's 3D space */

/* Back wall: Dimensions WxH */
.back {
    width: var(--room-width);
    height: var(--room-height);
    /* Push back by half depth */
    transform: translateZ(calc(-1 * var(--room-depth) / 2));
    background: linear-gradient(to bottom left, #888, #555);
}

/* Front wall: Dimensions WxH */
.front {
    width: var(--room-width);
    height: var(--room-height);
    /* Rotate 180deg, then push back by half depth */
    transform: rotateY(180deg) translateZ(calc(-1 * var(--room-depth) / 2));
    background: linear-gradient(to bottom right, #888, #555);
}

/* Left wall: Dimensions DxH */
.left {
    width: var(--room-depth); /* The 'width' of the side wall is the room's depth */
    height: var(--room-height);
    /* Rotate -90deg, then push back by half width */
    transform: rotateY(-90deg) translateZ(calc(-1 * var(--room-width) / 2));
    background: linear-gradient(to right, #777, #444);
}

/* Right wall: Dimensions DxH */
.right {
    width: var(--room-depth); /* The 'width' of the side wall is the room's depth */
    height: var(--room-height);
    /* Rotate 90deg, then push back by half width */
    transform: rotateY(90deg) translateZ(calc(-1 * var(--room-width) / 2));
    background: linear-gradient(to left, #777, #444);
}

/* Ceiling (Top wall): Dimensions WxD */
.top {
    width: var(--room-width);
    height: var(--room-depth); /* The 'height' of the ceiling is the room's depth */
    /* Rotate 90deg, then push back (up) by half height */
    transform: rotateX(90deg) translateZ(calc(-1 * var(--room-height) / 2));
    background: linear-gradient(to bottom, #999, #666);
}

/* Floor (Bottom wall): Dimensions WxD */
.bottom {
    width: var(--room-width);
    height: var(--room-depth); /* The 'height' of the floor is the room's depth */
    /* Rotate -90deg, then push back (down) by half height */
    transform: rotateX(-90deg) translateZ(calc(-1 * var(--room-height) / 2));
    background: linear-gradient(to top, #999, #666);
}

/* Features inside the room - no changes needed */
.window {
    width: 100px;
    height: 120px;
    background: skyblue;
    border: 5px solid #333;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.5);
    border-radius: 3px;
    position: relative;
    overflow: hidden;
}

.door {
    width: 100px;
    height: 180px;
    background: #442211;
    border: 5px solid #221100;
    border-radius: 3px;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
}

.door::before {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    background: gold;
    border-radius: 50%;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
}